###Prepare####
library(combinat)
library(ggplot2)
library(knitr)
set.seed(4444)
n <- 1000


###Golfer attributes####
safe.attributes <- data.frame(golfer=c('a','b','c','d'),
                              mean=c(8,7,6,5),
                              sd=c(1,1,1,1))
risk.attributes <- data.frame(golfer=c('a','b','c','d'),
                              mean=c(7,6,5,4),
                              sd=c(3,3,3,3))

safe.densities <- apply(safe.attributes[,-1],1,function(x) sort(rnorm(n=100,mean=x[1],sd=x[2])))
colnames(safe.densities) <- safe.attributes$golfer
safe.df <- data.frame(safe.densities)

risk.densities <- apply(risk.attributes[,-1],1,function(x) sort(rnorm(n=100,mean=x[1],sd=x[2])))
colnames(risk.densities) <- risk.attributes$golfer
risk.df <- data.frame(risk.densities)


###Plot golfer sample attributes####
par(mfrow=c(2,2))
par(mar=rep(2,4))

plot(safe.df$a,type='l',col='blue')
lines(risk.df$a,type='l',col='red')
title(main='Golfer A',col.main='black',font.main=4)
legend('topleft',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$b,type='l',col='blue')
lines(risk.df$b,type='l',col='red')
title(main='Golfer B',col.main='black',font.main=4)
legend('topleft',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$c,type='l',col='blue')
lines(risk.df$c,type='l',col='red')
title(main='Golfer C',col.main='black',font.main=4)
legend('topright',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$d,type='l',col='blue')
lines(risk.df$d,type='l',col='red')
title(main='Golfer D',col.main='black',font.main=4)
legend('topright',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)


###Create holes dataframe####
golfPerms <- permn(letters[1:4])
holes <- data.frame(matrix(NA,nrow=n,length(golfPerms)))

for (i in 1:length(golfPerms)){
  colnames(holes)[i] <- paste0(golfPerms[[i]][1],golfPerms[[i]][2],
                               golfPerms[[i]][3],golfPerms[[i]][4])
}


###Process####
for (j in 1:n){
  for (i in 1:length(golfPerms)){
    shot1 <- sample(safe.df[,substr(golfPerms[[i]][1],1,1)],1,T)
    
    if (shot1 >= 6) {
      shot2 <- max(shot1,sample(risk.df[,substr(golfPerms[[i]][2],1,1)],1,T))
    } else {
      shot2 <- max(shot1,sample(safe.df[,substr(golfPerms[[i]][2],1,1)],1,T))
    }
    
    if (shot2 >= 6) {
      shot3 <- max(shot2,sample(risk.df[,substr(golfPerms[[i]][3],1,1)],1,T))
    } else {
      shot3 <- max(shot2,sample(safe.df[,substr(golfPerms[[i]][3],1,1)],1,T))
    }
    
    if (shot3 >= 6) {
      shot4 <- max(shot3,sample(risk.df[,substr(golfPerms[[i]][4],1,1)],1,T))
    } else {
      shot4 <- max(shot3,sample(safe.df[,substr(golfPerms[[i]][4],1,1)],1,T))
    }
    
    holes[j,i] <- shot4
  }
}


###Find winning order per hole####
winners <- data.frame(matrix(NA,nrow=n,ncol=1))
names(winners) <- 'winner'
for (k in 1:n){winners[k,1] <- colnames(holes)[(which.max(holes[k,]))]}
winnerCounts <- data.frame(table(winners))
winnerCounts$winners <- reorder(winnerCounts$winners,-winnerCounts$Freq)


###Plot results####
par(mfrow=c(1,1))
ggplot(data=winnerCounts, aes(x=winners, y=Freq)) + 
  geom_bar(colour="black", fill="#DD8888", width=.7, stat="identity") + 
  guides(fill=FALSE) +
  xlab("Order") + ylab("Wins") +
  ggtitle("Golf Scramble Simulation")

