###Prepare####
setwd("C:\\Users\\ddunn\\Desktop\\DD\\R\\golfScrambleSim\\")
library(combinat)
library(ggplot2)
library(knitr)
set.seed(4444)
n <- 1000


###Golfer attributes####
quality <- seq(1,10)

safe.df <- data.frame(a=c(.1,.1,.1,.2,.3,.4,.5,.4,.3,.2),
                      b=c(.1,.1,.2,.3,.4,.5,.4,.3,.2,.1),
                      c=c(.1,.2,.3,.4,.5,.4,.3,.2,.1,.0),
                      d=c(.2,.3,.4,.5,.4,.3,.2,.1,.0,.0))

risk.df <- data.frame(a=c(.1,.1,.2,.3,.4,.5,.4,.3,.2,.4),
                      b=c(.1,.2,.3,.4,.5,.4,.3,.2,.1,.3),
                      c=c(.2,.3,.4,.5,.4,.3,.2,.1,.1,.2),
                      d=c(.3,.4,.5,.4,.3,.2,.1,.1,.1,.1))


###Plot golfer sample attributes####
par(mfrow=c(2,2))
par(mar=rep(2,4))

plot(safe.df$a,type='l',col='blue')
lines(risk.df$a,type='l',col='red')
title(main='Golfer A',col.main='black',font.main=4)
legend('topleft',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$b,type='l',col='blue')
lines(risk.df$b,type='l',col='red')
title(main='Golfer B',col.main='black',font.main=4)
legend('topleft',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$c,type='l',col='blue')
lines(risk.df$c,type='l',col='red')
title(main='Golfer C',col.main='black',font.main=4)
legend('topright',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)

plot(safe.df$d,type='l',col='blue')
lines(risk.df$d,type='l',col='red')
title(main='Golfer D',col.main='black',font.main=4)
legend('topright',c('safe','risk'),cex=0.8,col=c('blue','red'),lty=1)


###Create holes dataframe####
golfPerms <- permn(letters[1:4])
holes <- data.frame(matrix(NA,nrow=n,length(golfPerms)))

for (i in 1:length(golfPerms)){
  colnames(holes)[i] <- paste0(golfPerms[[i]][1],golfPerms[[i]][2],
                               golfPerms[[i]][3],golfPerms[[i]][4])
}


###Process####
for (j in 1:n){
  for (i in 1:length(golfPerms)){
    shot1 <- sample(quality,1,T,safe.df[,substr(golfPerms[[i]][1],1,1)])
    
    if (shot1 >= 5) {
      shot2 <- max(shot1,sample(quality,1,T,risk.df[,substr(golfPerms[[i]][2],1,1)]))
    } else {
      shot2 <- max(shot1,sample(quality,1,T,safe.df[,substr(golfPerms[[i]][2],1,1)]))
    }
    
    if (shot2 >= 5) {
      shot3 <- max(shot2,sample(quality,1,T,risk.df[,substr(golfPerms[[i]][3],1,1)]))
    } else {
      shot3 <- max(shot2,sample(quality,1,T,safe.df[,substr(golfPerms[[i]][3],1,1)]))
    }
    
    if (shot3 >= 5) {
      shot4 <- max(shot3,sample(quality,1,T,risk.df[,substr(golfPerms[[i]][4],1,1)]))
    } else {
      shot4 <- max(shot3,sample(quality,1,T,safe.df[,substr(golfPerms[[i]][4],1,1)]))
    }
    
    holes[j,i] <- shot4
  }
}


###Find winning order per hole####
winners <- data.frame(matrix(NA,nrow=n,ncol=1))
names(winners) <- 'winner'
for (k in 1:n){winners[k,1] <- colnames(holes)[(which.max(holes[k,]))]}
winnerCounts <- data.frame(table(winners))
winnerCounts$winners <- reorder(winnerCounts$winners,-winnerCounts$Freq)


###Plot results####
par(mfrow=c(1,1))
ggplot(data=winnerCounts, aes(x=winners, y=Freq)) + 
  geom_bar(colour="black", fill="#DD8888", width=.7, stat="identity") + 
  guides(fill=FALSE) +
  xlab("Order") + ylab("Wins") +
  ggtitle("Golf Scramble Simulation")
